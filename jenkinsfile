pipeline {
  agent any
  stages {
    stage('Checkout') {
      steps {
        sh 'echo "passed"'
        git branch: 'master', url: 'https://github.com/SIVAKUMAR1893/Calculator.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAaR file
        sh 'mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://167.71.226.81:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'SonarScan', variable: 'SonarScan')]) {
          sh 'mvn sonar:sonar -Dsonar.login=$SonarScan -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
     stage('Deploy to Artifactory') {
            environment {
                // Define the target repository in Artifactory
                TARGET_REPO = 'java-web-app'
                BN="${BUILD_NUMBER}"
            }
            
            steps {
                script {
                    try {
                        def server = Artifactory.newServer url: 'http://157.230.222.202:8080/artifactory', credentialsId: 'artifactory-token'
                        def uploadSpec = """{
                            "files": [
                                {
                                    "pattern": "target/*.jar:${BUILD_NUMBER}",
                                    "target": "${TARGET_REPO}/"
                                }
                            ]
                        }"""
                        
                        server.upload(uploadSpec)
                    } catch (Exception e) {
                        error("Failed to deploy artifacts to Artifactory: ${e.message}")
                    }
                }
            }
        }
        stage('Docker Build') {
            steps {
                sh 'docker build -t siva/calculator:$BUILD_NUMBER .'
                sh 'docker images'
      }
    }

  }
}

